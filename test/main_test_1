from flask import Flask, jsonify, request
from passlib.hash import pbkdf2_sha256
from mongoengine import connect
from models.user import User
from datetime import datetime

connect(db='hyphenyApi_test', alias='core', username='admin', password='Ensto11322', port=27017, authentication_source='admin', authmechanism='SCRAM-SHA-256')

app = Flask(__name__)

@app.route('/')
def home():
    return jsonify({"message": "Welcome to hypheny!"})

@app.route('/users', methods=['GET'])
def get_users():
    try:
        users = User.objects()
        user_list = []
        
        for user in users:
            contacts = [{"contact_id": contact.contact_id, "status": contact.status} for contact in user.contacts]
            user_data = {
                'username' : user.username,
                'email' : user.email,
                'password' : user.password,
                'profilePicture' : user.profile_picture,
                'bio' : user.bio,
                'created_at' : user.created_at.isoformat(),
                'modified_at' : user.modified_at.isoformat() if user.modified_at else None,
                'deleted_at' : user.deleted_at.isoformat() if user.deleted_at else None,
                'contacts': contacts
            }
            user_list.append(user_data)
        
        return jsonify({"users": user_list}), 200
    except Exception as e:
        print(e, end='\n')
        return jsonify({"error": "An error ocurred"}), 500

@app.route('/signup', methods=['POST'])
def signup():
    try:
        username = request.form.get('username'),
        email = request.form.get('email'),
        password = request.form.get('password')
        
        if len(password) < 6:
            return jsonify ({"error": "Password should be at least 6 characters"}), 400
        
        if User.objects(username=username).first():
            return jsonify({"error": "Username not available"}), 400
        
        if User.objects(email=email).first():
            return jsonify({"error": "Email not available"}), 400
        
        hashed_password = pbkdf2_sha256.hash(password)
        
        user = User(
            username = username,
            email = email,
            password = hashed_password,
            profilePicture = request.form.get('profilePicture'),
            bio = request.form.get('bio'),
            created_at =datetime.datetime.now(),
            modified_at = None,
            deleted_at = None,
        )
        
        user.save()
        
        return jsonify({"message": "user succesfully registered"}), 200
    except Exception as e:
        return jsonify({"error": "An error ocurred"}), 500
    
@app.route('/login', methods=['POST'])
def login():
    email = request.form.get('email')
    password = request.form.get('password')
    
    user = User.objects(email=email).first()
    
    if user and 
    return jsonify({"Message" : "Not implemented"}), 200



if __name__ == '__main__':
    app.run(debug=True, port=5000)
